#include <bits/stdc++.h>
#include <iostream>
#include <vector>

class AdminMenu {
public:
    void showDetails() {
        std::cout << "Admin Menu: Display All Customer Details" << std::endl;
        // Code to display customer details
    }
};

class Customer {
public:
    void menuBack() {
        std::cout << "Returning to main menu..." << std::endl;
        // Code to go back to the main menu
    }
};

class CabService {
private:
    static float lastCabCost;

public:
    static void displayCabDetails() {
        int cabChoice;
        int kilometers;
        int hireCab;

        std::cout << "Cab Service: Rent a Cab" << std::endl;
        std::cout << "1. Standard Cab" << std::endl;
        std::cout << "2. Luxury Cab" << std::endl;
        std::cout << "Enter your cab choice: ";
        std::cin >> cabChoice;
        std::cout << "Enter the number of kilometers: ";
        std::cin >> kilometers;

        float cabCost;
        if (cabChoice == 1) {
            cabCost = kilometers * 20;
            std::cout << "\nYour tour will cost " << cabCost << " rupees for a standard cab" << std::endl;
            std::cout << "Press 1 to hire this cab or ";
            std::cout << "Press 2 to select another cab: ";
            std::cin >> hireCab;
            if (hireCab == 1) {
                lastCabCost = cabCost;
                std::cout << "\n\nHired! Have a safe journey!" << std::endl;
                std::cout << "--------------------------------" << std::endl;
            }
            else {
                displayCabDetails();
            }
        }
        else if (cabChoice == 2) {
            cabCost = kilometers * 25;
            std::cout << "\nYour tour will cost " << cabCost << " rupees for a luxury cab" << std::endl;
            std::cout << "Press 1 to hire this cab or ";
            std::cout << "Press 2 to select another cab: ";
            std::cin >> hireCab;
            if (hireCab == 1) {
                lastCabCost = cabCost;
                std::cout << "\n\nHired! Have a safe journey!" << std::endl;
                std::cout << "--------------------------------" << std::endl;
            }
            else {
                displayCabDetails();
            }
        }
        else {
            displayCabDetails();
        }
    }
};

float CabService::lastCabCost;

class ManageMenu : public AdminMenu, public CabService, public Customer {
private:
    std::vector<std::string> customerList;

public:
    void addNewCustomer() {
        std::string customerName;
        std::cout << "New Customer Menu" << std::endl;
        std::cout << "Enter customer name: ";
        std::cin.ignore(); // Ignore the newline character in the input buffer
        std::getline(std::cin, customerName);
        customerList.push_back(customerName);
        std::cout << "Customer added successfully!" << std::endl;
    }

    void showAllCustomers() {
        std::cout << "Customer List:" << std::endl;
        for (const std::string& customer : customerList) {
            std::cout << customer << std::endl;
        }
    }

    void menu() {
        char choice;
        do {
            std::cout << "---------Main Menu---------" << std::endl;
            std::cout << "1. New Customer" << std::endl;
            std::cout << "2. Rent a Cab" << std::endl;
            std::cout << "3. Show All Customer Details" << std::endl;
            std::cout << "4. Return to Previous Menu" << std::endl;
            std::cout << "Enter your choice: ";
            std::cin >> choice;

            switch (choice) {
                case '1':
                    addNewCustomer();
                    break;
                case '2':
                    CabService::displayCabDetails();
                    break;
                case '3':
                    showDetails();
                    showAllCustomers();
                    break;
                case '4':
                    menuBack();
                    break;
                default:
                    std::cout << "Invalid choice. Please try again." << std::endl;
                    break;
            }
        } while (choice != '4');
    }
};

int main() {
    ManageMenu manageMenu;
    manageMenu.menu();

    return 0;
}


/*
EXPLANATION :-
( #include <bits/stdc++.h> ) -> This line includes the entire standard library in a single line.
First, we have the necessary #include statements to include the required libraries.
The AdminMenu class is defined, which currently has a single function showDetails(). This function is responsible for displaying all the customer details. In the provided code, the actual implementation of displaying customer details is missing, so you would need to add the relevant code in this function.
The Customer class is defined, which currently has a single function menuBack(). This function is responsible for returning to the main menu. Similar to the AdminMenu class, the actual implementation of going back to the main menu is missing, so you would need to add the relevant code in this function.
The CabService class is defined. This class contains the static function displayCabDetails(), which handles the process of renting a cab. It prompts the user to choose between a standard cab and a luxury cab, input the number of kilometers, calculates the cost based on the chosen cab type and kilometers, and offers the option to hire the cab or select another cab. If the user chooses to hire the cab, it sets the lastCabCost variable accordingly.
The lastCabCost variable is declared as a static float inside the CabService class. It keeps track of the cost of the last rented cab.
The ManageMenu class is defined, which inherits from AdminMenu, CabService, and Customer. This class contains the main menu and manages the interactions with the user.
The addNewCustomer() function is added to the ManageMenu class. This function is called when the user selects the "New Customer" option from the main menu. It prompts the user to enter a customer name and adds it to the customerList vector.
The showAllCustomers() function is added to the ManageMenu class. This function is called when the user selects the "Show All Customer Details" option from the main menu. It displays all the customer names stored in the customerList vector.
The menu() function is defined inside the ManageMenu class. This function represents the main menu and handles user input and corresponding actions. It uses a do-while loop to continuously display the menu and process the user's choice until the user selects the "Return to Previous Menu" option.
Inside the menu() function, there is a switch statement that checks the user's choice and performs the corresponding action:
If the user selects "1. New Customer", the addNewCustomer() function is called to add a new customer to the customerList.
If the user selects "2. Rent a Cab", the displayCabDetails() function from the CabService class is called to handle the cab renting process.
If the user selects "3. Show All Customer Details", the showDetails() function from the AdminMenu class is called to display the customer details, followed by the showAllCustomers() function to display the customer list.
If the user selects "4. Return to Previous Menu", the menuBack() function from the Customer class is called to return to the main menu.
If the user selects any other option, an error message is displayed.
The main() function creates an instance of the ManageMenu class named manageMenu and calls its menu() function to start the program.
*/
